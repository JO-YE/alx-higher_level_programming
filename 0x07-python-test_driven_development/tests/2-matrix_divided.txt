The ''2-matrix_divided'' module
=============================

Using ''matrix_divided''
----------------------

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

>>> matrix_divided([[2, 4, 6], [50, 100, 25]],  2)
[[1.0, 2.0, 3.0], [25.0, 50.0, 12.5]]

>>> matrix_divided([24, 30, 15], 4)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[2, 4, 6], [50, 100]],  3)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size

Div an alphabelt
>>> matrix_divided([[2, 4, 6], [50, 100, 30]],  '99')
Traceback (most recent call last):
    ...
TypeError: div must be a number

>>> matrix_divided([[2, 4, 60], [50, 100, 30]], 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero

>>> matrix_divided([[2, 4, 60], [50, 100, 30], [24, 56], [60]], 7)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

>>> matrix_divided([['hi', 'you'], ['hey', 'school']], 4)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([['hi', 'you'], ['hey', 'school']], [4])
Traceback (most recent call last):
    ...
TypeError: div must be a number

>>> matrix_divided((3, 9, 90), 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[2, 4, '60'], [50, 100, 30]], 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

Dividing a matrix which has positive and negative integer/float numbers
>>> matrix_divided([[-1, 3.1, 0], [78, -103.7, 54]], 9.2)
[[-0.11, 0.34, 0.0], [8.48, -11.27, 5.87]]

Passing a matrix which one of its elements is an empty list:
>>> matrix_divided([[2.1, 5.8], [], [10, -3]], 8)
Traceback (most recent call last):
   ...
TypeError: Each row of the matrix must have the same size

Dividing a matrix by a float number:
>>> matrix_divided([[10, 20, 30], [1.33, 3.74, 6.89], [-8, -9.71, 0]], 5.3)
[[1.89, 3.77, 5.66], [0.25, 0.71, 1.3], [-1.51, -1.83, 0.0]]
